@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 0.5rem;
    --border-accent-light: 240 5% 80%; /* Added for light mode accent border */
    --border-accent-dark: 0 0% 100% / 0.3; /* Added for dark mode accent border (white 30% opacity) */
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    /* --border-accent-dark is defined in :root and will be used by .dark .borderAccent if not overridden here */
    /* Alternatively, you could define it here if you prefer: */
    /* --border-accent-dark: 0 0% 100% / 0.3; */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    width: 100%; /* Added for explicitness */
    height: 100%; /* Ensure html takes full viewport height */
    overflow: hidden; /* Prevent scrolling and hide scrollbars */
    /* Hide scrollbar for Firefox */
    scrollbar-width: none;
    /* Hide scrollbar for IE, Edge and other browsers */
    -ms-overflow-style: none;
  }
  /* Hide scrollbar for Chrome, Safari and Opera */
  html::-webkit-scrollbar {
    display: none;
  }

  body {
    width: 100%; /* Added for explicitness */
    height: 100%; /* Ensure body takes full html height */
    overflow: hidden; /* Prevent scrolling and hide scrollbars */
    @apply bg-background text-foreground;
    /* Hide scrollbar for Firefox */
    scrollbar-width: none;
    /* Hide scrollbar for IE, Edge and other browsers */
    -ms-overflow-style: none;
  }
  /* Hide scrollbar for Chrome, Safari and Opera */
  body::-webkit-scrollbar {
    display: none;
  }

  /* Ensure Next.js root div conforms to body height */
  #__next {
    height: 100%;
  }
}

/* Custom utility to hide scrollbar */
.no-scrollbar {
  /* Hide scrollbar for Firefox */
  scrollbar-width: none;
  /* Hide scrollbar for IE, Edge */
  -ms-overflow-style: none;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.background {
  background: linear-gradient(to right, #d7d2cc 0%, #304352 100%);
}

.borderAccent {
  border-color: hsl(var(--border-accent-light));
}
.dark .borderAccent {
  border-color: hsl(var(--border-accent-dark));
}

.backgroundAccent {
  --tw-bg-opacity: 1;
  background: #ffffff1a;
}

.textAccent {
  color: #eff2f699;
}

.heightmoment {
  min-height: 30vh;
}

.navContainer {
  display: flex;
  justify-content: end;
  align-items: center;
}

.anchor {
  overflow-anchor: none;
}

@media (min-width: 1600px) {
  .mewhen {
    height: fit-content;
  }
}

.filter-button {
  position: relative;
}

.filter-button-line {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 22px; /* Increased from 12px */
  background-color: #6b7280;
  /* Default transition for hover OFF: line is delayed */
  transition: height 0.15s ease 0.075s, background-color 0.15s ease 0.075s;
  z-index: 5;
}

.filter-button-line-active {
  height: 100%;
  background-color: #ff4654;
}

.filter-button-bg {
  position: absolute;
  left: 2px;
  top: 0;
  width: 0;
  height: 100%;
  background-color: #ff4654;
  /* Default transition for hover OFF: background is immediate */
  transition: width 0.15s ease 0s;
  z-index: 1;
}

.filter-button-bg-active {
  width: calc(100% - 2px);
}

/* Overrides for hover ON animation sequence */
.animate-active-state .filter-button-line {
  /* Line is immediate */
  transition-delay: 0s, 0s;
}

.animate-active-state .filter-button-bg {
  /* Background is delayed */
  transition-delay: 0.075s;
}

.filter-button-active .filter-button-line {
  /* Ensure active state styles are maintained, transition properties are from .filter-button-line */
  height: 100%;
  background-color: #ff4654;
}

.filter-button-active .filter-button-bg {
  /* Ensure active state styles are maintained, transition properties are from .filter-button-bg */
  width: calc(100% - 2px);
}

.filter-divider {
  width: 100%;
  height: 2px;
  background-color: theme('colors.gridDivider');
  margin: 0;
}

/* Skin grid hover animation */
.skin-grid-item {
  position: relative;
  transition: all 0.2s ease-out;
}

.skin-grid-item:hover {
  box-shadow: 0 0 0 2px #ff4654;
  border-color: #ff4654;
}

/* Alternative approach using pseudo-element for cleaner animation */
.skin-grid-item::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, #ff4654, #ff4654);
  z-index: -1;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  pointer-events: none;
}

.skin-grid-item:hover::before {
  opacity: 1;
}